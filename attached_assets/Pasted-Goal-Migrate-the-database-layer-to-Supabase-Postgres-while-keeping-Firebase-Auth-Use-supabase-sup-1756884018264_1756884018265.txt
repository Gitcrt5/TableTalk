Goal: Migrate the database layer to Supabase Postgres while keeping Firebase Auth. Use @supabase/supabase-js on the server only. Do not expose the service role key to the browser.
Repo assumptions: Vite + React + TS frontend, small Node/Express (or Fastify) API. React Query on the client.
Add @supabase/supabase-js to the server only.
Keep Firebase Auth on the client. In the server, add a requireAuth middleware that verifies Firebase ID tokens with firebase-admin. If firebase-admin isnâ€™t present, add it and read credentials from env.
Find all current DB access (Prisma/pg/SQLite/etc.). Replace with Supabase queries via supabaseAdmin.
The frontend must never access Supabase directly.
All Supabase usage must occur **only in the backend**, using `@supabase/supabase-js`.
The frontend must communicate **only with the backend** via API routes.
Do **not use** `pg`, `drizzle`, `prisma`, or any direct database drivers or ORMs.
Supabase keys, SMTP credentials, and other environment secrets must **never be exposed in frontend code or Vite-visible `.env` files**.
Project must have a clear and consistent **client/server directory split** (e.g., `/src` for frontend, `/server` for backend).
Advise of any environment variables used in the app that have not yet been defined in the secrets tool
Verify no forbidden dependencies are present: check for `drizzle`, `prisma`, `pg` packages in package.json and ensure no related config files exist (drizzle.config.ts, prisma.schema, etc.)
The **frontend must never access Supabase file storage directly** - it should use a backend proxy route that uses the admin Supabase client for storage operations to retrieve files and serve them through the backend API, avoiding any direct frontend storage access

I want you to do the following:
- Research deeply across my codebase. Research only, do not make any changes. 
- Find what files and functions are related to the problems and goals I outlined above.
- Develop a plan to fix it. Do not make any changes until I have given explicit instructions to do so.
- If there is any aspect of the problem that is unclear ask clarifying questions before progressing further.
- Include a plan for migrating data in the existing database to the new Supabase database.
- Write this entire plan and report into a file called "Instructions.md" in my project, overwriting any existing file.
- Do not make any changes to the code without explicit confirmation to do so.